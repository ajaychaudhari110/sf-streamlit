name: deploy
on:
  push:
    paths:
      - "snowflake_streamlit_apps/**"

jobs:
  version:
    name: "Deploy Streamlit Apps"
    runs-on: ubuntu-latest
    steps:
      # Checkout step is necessary if you want to use a config file from your repo
      - name: Checkout repo
        uses: actions/checkout@v4
        with:
          persist-credentials: false
          fetch-depth: 0

      # Check current folder path
      - name: print current directory
        run: |
          ls $GITHUB_WORKSPACE/

      # Snowflake CLI installation
      - uses: snowflakedb/snowflake-cli-action@v1.5

      # Use the CLI
      - name: Execute Snowflake CLI command
        run: |
          snow --version

      # Install Tools
      - name: Install Tools
        run: |
          pip install yq

      # Find Streamlit Apps
      - name: Find Changed Apps
        id: detect
        run: |
          # Compare files changed in this push
          changed=$(git diff --name-only ${{ github.event.before }} ${{ github.sha }} \
            | grep '^snowflake_streamlit_apps/' \
            | cut -d'/' -f2 \
            | sort -u)

          if [ -z "$changed" ]; then
            echo "No apps changed."
            echo "apps=" >> $GITHUB_OUTPUT
          else
            echo "Changed apps: $changed"
            echo "apps=$changed" >> $GITHUB_OUTPUT
          fi

      # Deployed changed/new streamlit apps
      - name: Deploy Changed Apps
        if: steps.detect.outputs.apps != ''
        run: |
          for app in ${{ steps.detect.outputs.apps }}; do
            APP_DIR="snowflake_streamlit_apps/$app"
            CONFIG_FILE="$APP_DIR/config.yaml"
            APP_NAME=$(yq '.app_name' $CONFIG_FILE)

            echo "Deploying $APP_NAME from $APP_DIR"

            accounts=$(yq '.deploy_to | length' $CONFIG_FILE)

            for i in $(seq 0 $((accounts-1))); do
              acct_key=$(yq ".deploy_to[$i].account" $CONFIG_FILE)

              echo "Deploying to $acct_key..."
            done
          done